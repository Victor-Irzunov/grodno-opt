"use client";
import { GetGoogle, uploadPriceProduct } from '@/http/adminAPI';
import { Button, Form, message } from 'antd';
import { useEffect, useState } from 'react';

const AddProductPrice = ({ setData, data }) => {
	const [form] = Form.useForm();
	const [error, setError] = useState(null);
	const [isLoading, setIsLoading] = useState(false); // üî• –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏

	useEffect(() => {
		async function fetchData() {
			try {
				const response = await GetGoogle();
				setData(response.data);
			} catch (err) {
				console.error("üöÄ üöÄ üöÄ  _ fetchData _ err:", err);
				setError(err.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∞–π—Å–∞');
			}
		}
		fetchData();
	}, []);

	const onFinish = async () => {
		try {
			if (data.length) {
				setIsLoading(true); // üî• –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º
				const response = await uploadPriceProduct({ data });
				console.log("üöÄ üöÄ üöÄ  _ onFinish _ response:", response);

				if (response.success === false) {
					message.warning(response.message || '–≠—Ç–æ—Ç –ø—Ä–∞–π—Å —É–∂–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω —Ä–∞–Ω–µ–µ');
				} else {
					message.success('–ü—Ä–∞–π—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω');
					setData(response);
				}
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∞–π—Å–∞:', error);
			message.error(error.response?.data?.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞');
		} finally {
			setIsLoading(false); // üî• –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞
		}
	};

	return (
		<div className='pl-10'>
			<Form
				form={form}
				name="addCategory"
				onFinish={onFinish}
				labelCol={{ span: 24 }}
				wrapperCol={{ span: 12 }}
			>
				<Form.Item wrapperCol={{ span: 12 }}>
					<Button
						color="primary"
						variant="outlined"
						style={{ backgroundColor: '#191919' }}
						htmlType="submit"
						disabled={isLoading} // üî• –ö–Ω–æ–ø–∫–∞ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –≤–æ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞
					>
						{isLoading ?
							<span className='text-white/80'>–ó–∞–≥—Ä—É–∑–∫–∞ ....</span>
							:
							'–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∞–π—Å'
						}
					</Button>
				</Form.Item>
			</Form>
		</div>
	);
};

export default AddProductPrice;
